import{a as L,S as w,i as l}from"./assets/vendor-Db2TdIkw.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function a(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(e){if(e.ep)return;e.ep=!0;const o=a(e);fetch(e.href,o)}})();const v="49411735-b32ab4d57ab72698c2bda355f",E="https://pixabay.com/api/";async function m(s,t=1,a=40){try{const n=await L.get(E,{params:{key:v,q:s,image_type:"photo",orientation:"horizontal",safesearch:"true",page:t,per_page:a}});return{images:n.data.hits,totalHits:n.data.totalHits}}catch(n){throw console.error("Error fetching images:",n),n}}const u=document.querySelector(".gallery"),S=new w(".gallery a",{captionsData:"alt",captionDelay:250});function $(){u.innerHTML=""}function f(s){const t=s.map(({webformatURL:a,largeImageURL:n,tags:e,likes:o,views:i,comments:h,downloads:b})=>`
      <li class="img-card">
        <a href="${n}" target="_blank">
          <img src="${a}" alt="${e}" loading="lazy" />
        </a>
        <div class="image-info">
          <p>‚ù§Ô∏è Likes: <strong>${o}</strong></p>
          <p>üëÅ Views: <strong>${i}</strong></p>
          <p>üí¨ Comments: <strong>${h}</strong></p>
          <p>‚¨á Downloads: <strong>${b}</strong></p>
        </div>
      </li>`).join("");u.insertAdjacentHTML("beforeend",t),S.refresh()}const q=document.querySelector(".form"),H=document.querySelector("#input"),I=document.querySelector(".gallery"),p=document.querySelector("#loading-message"),r=document.createElement("button");r.textContent="Load more";r.id="load-more-btn";r.style.display="none";document.body.appendChild(r);let d="",c=1;const y=15;let g=0;q.addEventListener("submit",async s=>{if(s.preventDefault(),d=H.value.trim(),!!d){c=1,$(),r.style.display="none",p.style.display="block";try{const{images:t,totalHits:a}=await m(d,c,y);if(g=a,t.length===0){l.warning({title:"Warning",message:"No images found. Try another search!",position:"topRight"});return}f(t),g<=y?r.style.display="none":r.style.display="block",l.success({title:"Success",message:`Found ${g} images!`,position:"topRight"})}catch(t){l.error({title:"Error",message:"Something went wrong. Please try again later.",position:"topRight"}),console.error("Error fetching images:",t)}finally{p.style.display="none"}}});r.addEventListener("click",async()=>{c+=1,r.style.display="none",p.style.display="block";try{const{images:s}=await m(d,c,y);f(s);const t=I.getBoundingClientRect().height;window.scrollBy({top:t*.5,behavior:"smooth"}),c*y>=g?(r.style.display="none",l.info({title:"Info",message:"We're sorry, but you've reached the end of search results.",position:"topRight"})):r.style.display="block"}catch(s){l.error({title:"Error",message:"Failed to load more images.",position:"topRight"}),console.error("Error loading more images:",s)}finally{p.style.display="none"}});
//# sourceMappingURL=index.js.map
